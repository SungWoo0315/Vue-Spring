package com.dream.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dream.mapper.BoardMapper;
import com.dream.vo.BoardVO;

@Service
public class BoardService implements BoardServiceIF {

	@Autowired
	private SqlSessionFactory sqlSessionFactory;

	@Override
	public List<BoardVO> getBoardList() {
		// TODO Auto-generated method stub
		List<BoardVO> boardList = new ArrayList<BoardVO>();

		try (SqlSession session = sqlSessionFactory.openSession()) {
			BoardMapper mapper = session.getMapper(BoardMapper.class);

			boardList = mapper.getBoardList();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return boardList;
	}

	@Override
	public Boolean regBoard(BoardVO vo) {
		// TODO Auto-generated method stub
//		vo.setReg_date(new Date());
//		vo.setWriter("user");
		
		boolean result = false;
		
		try (SqlSession session = sqlSessionFactory.openSession()) {
			BoardMapper mapper = session.getMapper(BoardMapper.class);
			
			// 매퍼의 결과를 담을 변수 
			int mapperResult = 0;
			
			// 성공 시 1 반환
			mapperResult = mapper.regBoard(vo);
			
			// 정상 작동 시 return 값을 true 
			if (mapperResult > 0) {
				result = true;
			}
			else {
				result = false;
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public BoardVO getBoardDetail(BoardVO vo) {
		// TODO Auto-generated method stub
		BoardVO board = new BoardVO();
		
		try(SqlSession session = sqlSessionFactory.openSession()) {
			BoardMapper mapper = session.getMapper(BoardMapper.class);
			
			board = mapper.getBoardDetail(vo.getB_no());
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return board;
	}

	public Object editBoard(BoardVO vo) {
		// TODO Auto-generated method stub
		
//		vo.setWriter("wirter");
		
		boolean result = false;
		
		try ( SqlSession session = sqlSessionFactory.openSession()){
			BoardMapper mapper = session.getMapper(BoardMapper.class);
			
			//매퍼의 결과를 담을 변수
			int mapperResult = 0;
			
			//성공 시 1이 반환
			mapperResult = mapper.editBoard(vo);
			
			System.out.println("editBoard 메서드 sql 실행 결과 확인 ==>  " + mapperResult);
			
			//정상 동작 시 retrun 값을 true 
			if (mapperResult >0) {
				result = true;
			}
			// 정상 동작이 이닐 시 return 값 false;
			else {
				result = false;
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		
		return result;
	}

}